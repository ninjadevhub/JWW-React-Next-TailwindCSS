version: 2.1
jobs:
  build-and-test:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Install dependencies
          # From https://circleci.com/orbs/registry/orb/threetreeslight/puppeteer
          command: |
            sudo apt-get update &&
            sudo apt-get install -yq \
            gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
            fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
      - run:
          name: Install node@12.18.3, npm and yarn
          command: |
            set +e
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install v12.18.3
            nvm use v12.18.3
            npm install --global yarn

            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
            echo 'nvm use v12.18.3' >> $BASH_ENV
      - restore_cache:
          key: dependency-cache-v1-{{ checksum "package-lock.json" }}-{{ checksum "test/support/testground/yarn.lock" }}
      - run:
          name: npm install
          command: npm install
      - save_cache:
          key: dependency-cache-v1-{{ checksum "package-lock.json" }}-{{ checksum "test/support/testground/yarn.lock" }}
          paths:
            - ./node_modules
            - ./test/support/testground/node_modules
      - run:
          name: npm test
          command: npm test -- --ci --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: "reports/junit/js-test-results.xml"
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

workflows:
  build-and-test:
    jobs:
      - build-and-test
